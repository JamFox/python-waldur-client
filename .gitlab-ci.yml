include:
  - project: "waldur/waldur-pipelines"
    file: "/templates/stages.yml"
  - project: "waldur/waldur-pipelines"
    file: "/templates/test/check-merge-compatibility.yml"
  - project: "waldur/waldur-pipelines"
    file: "/templates/test/lint-md-files.yml"

.Run tests template:
  stage: test
  interruptible: true
  rules:
    # Skip tests if specified
    - if: '$SKIP_TESTS == "true" || $SKIP_TESTS == "yes"'
      when: never
    - if: '$CI_COMMIT_BRANCH == "develop"'
    - if: '$CI_COMMIT_BRANCH == "master"'
    # If tagged release
    - if: '$CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+$/'
    # If event is related to a created merge request
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  artifacts:
    when: always
    reports:
      junit: report.xml
  script:
    - pip install poetry
    - poetry config virtualenvs.create false
    - poetry install
    - pytest --junitxml=report.xml

.Run linters template:
  stage: test
  interruptible: true
  rules:
    # Skip tests if specified
    - if: '$SKIP_TESTS == "true" || $SKIP_TESTS == "yes"'
      when: never
    - if: '$CI_COMMIT_BRANCH == "develop"'
    - if: '$CI_COMMIT_BRANCH == "master"'
    # If tagged release
    - if: '$CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+$/'
    # If event is related to a created merge request
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  script:
    - pip install pre-commit
    - pre-commit run --all

Run python v3.9 linters:
  image: "registry.hpc.ut.ee/mirror/library/python:3.9"
  extends: .Run linters template
  before_script:
    - |
      echo 'default_language_version:' >> .pre-commit-config.yaml
      echo '  python: python3.9' >> .pre-commit-config.yaml
    - cat .pre-commit-config.yaml

Run python v3.10 linters:
  image: "registry.hpc.ut.ee/mirror/library/python:3.10"
  extends: .Run linters template
  before_script:
    - |
      echo 'default_language_version:' >> .pre-commit-config.yaml
      echo '  python: python3.10' >> .pre-commit-config.yaml
    - cat .pre-commit-config.yaml

Run python v3.11 linters:
  image: "registry.hpc.ut.ee/mirror/library/python:3.11"
  extends: .Run linters template
  before_script:
    - |
      echo 'default_language_version:' >> .pre-commit-config.yaml
      echo '  python: python3.11' >> .pre-commit-config.yaml
    - cat .pre-commit-config.yaml

Run python v3.12 linters:
  image: "registry.hpc.ut.ee/mirror/library/python:3.12"
  extends: .Run linters template
  before_script:
    - |
      echo 'default_language_version:' >> .pre-commit-config.yaml
      echo '  python: python3.12' >> .pre-commit-config.yaml
    - cat .pre-commit-config.yaml

Run python v3.13 linters:
  image: "registry.hpc.ut.ee/mirror/library/python:3.13"
  extends: .Run linters template
  before_script:
    - |
      echo 'default_language_version:' >> .pre-commit-config.yaml
      echo '  python: python3.13' >> .pre-commit-config.yaml
    - cat .pre-commit-config.yaml

Run python v3.9 tests:
  image: "registry.hpc.ut.ee/mirror/library/python:3.9"
  extends: .Run tests template

Run python v3.10 tests:
  image: "registry.hpc.ut.ee/mirror/library/python:3.10"
  extends: .Run tests template

Run python v3.11 tests:
  image: "registry.hpc.ut.ee/mirror/library/python:3.11"
  extends: .Run tests template

Run python v3.12 tests:
  image: "registry.hpc.ut.ee/mirror/library/python:3.12"
  extends: .Run tests template

Run python v3.13 tests:
  image: "registry.hpc.ut.ee/mirror/library/python:3.13"
  extends: .Run tests template


Publish python module tagged release:
  image: python:3.9-alpine
  script:
    - pip install poetry
    - poetry config http-basic.pypi $PYPI_USERNAME $PYPI_PASSWORD
    - poetry config virtualenvs.create false
    - sed -i "s/^version = \".*\"$/version = \"$CI_COMMIT_TAG\"/" pyproject.toml
    - head pyproject.toml
    - poetry publish --build
